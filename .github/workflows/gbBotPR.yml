on:
  pull_request_target:
    types: 
      [opened, synchronize, reopened, edited, review_requested, labeled]
    paths:    
      - 'sourceData/**'
jobs:
  geoBoundaryZipfileChecks:
    runs-on: ubuntu-latest
    container: osgeo/gdal:ubuntu-small-latest
    steps:
    - name: Initialize Linux Environment
      run: |
           apt-get update
           apt-get install -y software-properties-common
           add-apt-repository ppa:git-core/ppa
           apt-get update
           apt-get install -y git
           curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
           apt-get install git-lfs
           git clone https://github.com/wmgeolab/geoBoundaryBot ~
    
    - name: Download Repository Code
      uses: actions/checkout@v2.3.2
      with:
        ref: ${{ github.event.pull_request_target.head.sha }}  

    - id: changes
      name: Detect Proposed Changes
      uses: wmgeolab/get-changed-files@master
      with:
        format: 'json'
      
      
    - name: Check for valid files in submission
      run: |
           export changes=${{ steps.changes.outputs.added_modified }}
           export gitsha=${{github.sha}}
           echo ${GITHUB_SHA}
           echo ${GITHUB_WORKSPACE}
           ls
           echo $(ls)
           echo "==============================================="
           git diff-tree --no-commit-id --name-only -r ${{github.sha}} > proposedChanges
           cat proposedChanges
           echo "==============================================="
           mkdir tmp
           mkdir tmp/${{github.sha}}
           python ~/gbZipCheck.py
      
    - name: Build Artifacts
      uses: actions/upload-artifact@v2
      with:
          name: zipLogs
          path: tmp/
  
  geoBoundaryMetaDataCheck:
      runs-on: ubuntu-latest
      container: osgeo/gdal:ubuntu-small-latest
      steps:
      - name: Initialize Linux Environment
        run: |
             apt-get update
             apt-get install -y software-properties-common
             add-apt-repository ppa:git-core/ppa
             apt-get update
             apt-get install -y git
             curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
             apt-get install git-lfs
             git clone https://github.com/wmgeolab/geoBoundaryBot ${GITHUB_WORKSPACE}
      
      - name: Download Repository Code
        uses: actions/checkout@v2.3.2
        with:
          ref: ${{ github.event.pull_request_target.head.sha }}  
  
      - id: changes
        name: Detect Proposed Changes
        uses: wmgeolab/get-changed-files@master
        with:
          format: 'json'
        
        
      - name: Check for valid metadata in submission files
        run: |
             export changes=${{ steps.changes.outputs.added_modified }}
             export gitsha=${{github.sha}}
             echo ${GITHUB_SHA}
             echo ${GITHUB_WORKSPACE}
             echo "==============================================="
             git diff-tree --no-commit-id --name-only -r ${{github.sha}} > proposedChanges
             cat proposedChanges
             echo "==============================================="
             mkdir tmp
             mkdir tmp/${{github.sha}}
             python ~/geoBoundaryBot/gbMetaCheck.py
     
      - name: Build Artifacts 
        uses: actions/upload-artifact@v2
        with:
          name: metaLogs
          path: tmp/
    
  geoBoundaryDataCheck:
      runs-on: ubuntu-latest
      container: osgeo/gdal:ubuntu-small-latest
      steps:
      - name: Initialize Linux Environment
        run: |
              apt-get update
              apt-get install -y software-properties-common
              add-apt-repository ppa:git-core/ppa
              apt-get update
              apt-get install -y git
              curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
              apt-get install -y git-lfs
              apt-get install -y python3-pip
              pip3 install geopandas
              git clone https://github.com/wmgeolab/geoBoundaryBot ${GITHUB_WORKSPACE}
      
      - name: Download Repository Code
        uses: actions/checkout@v2.3.2
        with:
          ref: ${{ github.event.pull_request_target.head.sha }}  
  
      - id: changes
        name: Detect Proposed Changes
        uses: wmgeolab/get-changed-files@master
        with:
          format: 'json'
        
        
      - name: Check for valid data in submission files
        run: |
              export changes=${{ steps.changes.outputs.added_modified }}
              export gitsha=${{github.sha}}
              echo ${GITHUB_SHA}
              echo ${GITHUB_WORKSPACE}
              echo "==============================================="
              git diff-tree --no-commit-id --name-only -r ${{github.sha}} > proposedChanges
              cat proposedChanges
              echo "==============================================="
              mkdir tmp
              mkdir tmp/${{github.sha}}
              ls ../
              python ./geoBoundaryBot/gbDataCheck.py
              
      - name: Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dataLogs
          path: tmp/
